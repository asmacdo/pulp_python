{"swagger": "2.0", "info": {"title": "Pulp 3 API", "version": "v3"}, "host": "localhost:8000", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/pulp/api/v3/content/python/packages/": {"get": {"operationId": "content_python_packages_list", "summary": "List python package contents", "description": "The ViewSet for PythonPackageContent.", "parameters": [{"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "author", "in": "query", "description": "Filter results where author matches value", "required": false, "type": "string"}, {"name": "author__in", "in": "query", "description": "Filter results where author is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "packagetype", "in": "query", "description": "Filter results where packagetype matches value", "required": false, "type": "string"}, {"name": "packagetype__in", "in": "query", "description": "Filter results where packagetype is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "filename", "in": "query", "description": "Filter results where filename matches value", "required": false, "type": "string"}, {"name": "filename__in", "in": "query", "description": "Filter results where filename is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "filename__contains", "in": "query", "description": "Filter results where filename contains value", "required": false, "type": "string"}, {"name": "keywords__in", "in": "query", "description": "Filter results where keywords is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "keywords__contains", "in": "query", "description": "Filter results where keywords contains value", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/PythonPackageContent"}}}}}}, "tags": ["content"]}, "post": {"operationId": "content_python_packages_create", "summary": "Create a python package content", "description": "Create a new PythonPackageContent from a request.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PythonPackageContent"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PythonPackageContent"}}}, "tags": ["content"]}, "parameters": []}, "{python_package_content_href}": {"get": {"operationId": "content_python_packages_read", "summary": "Inspect a python package content", "description": "The ViewSet for PythonPackageContent.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PythonPackageContent"}}}, "tags": ["content"]}, "parameters": [{"name": "python_package_content_href", "in": "path", "description": "URI of Python Package Content. e.g.: /pulp/api/v3/content/python/packages/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/publishers/python/python/": {"get": {"operationId": "publishers_python_python_list", "summary": "List python publishers", "description": "A ViewSet for PythonPublisher.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "_last_updated__lt", "in": "query", "description": "Filter results where _last_updated is less than value", "required": false, "type": "string"}, {"name": "_last_updated__lte", "in": "query", "description": "Filter results where _last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__gt", "in": "query", "description": "Filter results where _last_updated is greater than value", "required": false, "type": "string"}, {"name": "_last_updated__gte", "in": "query", "description": "Filter results where _last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__range", "in": "query", "description": "Filter results where _last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/PythonPublisher"}}}}}}, "tags": ["publishers"]}, "post": {"operationId": "publishers_python_python_create", "summary": "Create a python publisher", "description": "A ViewSet for PythonPublisher.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PythonPublisher"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PythonPublisher"}}}, "tags": ["publishers"]}, "parameters": []}, "{python_publisher_href}": {"get": {"operationId": "publishers_python_python_read", "summary": "Inspect a python publisher", "description": "A ViewSet for PythonPublisher.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PythonPublisher"}}}, "tags": ["publishers"]}, "put": {"operationId": "publishers_python_python_update", "summary": "Update a python publisher", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PythonPublisher"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["publishers"]}, "patch": {"operationId": "publishers_python_python_partial_update", "summary": "Partially update a python publisher", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PythonPublisher"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["publishers"]}, "delete": {"operationId": "publishers_python_python_delete", "summary": "Delete a python publisher", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["publishers"]}, "parameters": [{"name": "python_publisher_href", "in": "path", "description": "URI of Python Publisher. e.g.: /pulp/api/v3/publishers/python/python/1/", "required": true, "type": "string"}]}, "{python_publisher_href}publish/": {"post": {"operationId": "publishers_python_python_publish", "description": "Trigger an asynchronous task to publish python content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryPublishURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["publishers"]}, "parameters": [{"name": "python_publisher_href", "in": "path", "description": "URI of Python Publisher. e.g.: /pulp/api/v3/publishers/python/python/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/python/python/": {"get": {"operationId": "remotes_python_python_list", "summary": "List python remotes", "description": "List all Python Remotes", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/PythonRemote"}}}}}}, "tags": ["remotes"]}, "post": {"operationId": "remotes_python_python_create", "summary": "Create a python remote", "description": "Create a Python Remote, representing an external source of Python content", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PythonRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PythonRemote"}}}, "tags": ["remotes"]}, "parameters": []}, "{python_remote_href}": {"get": {"operationId": "remotes_python_python_read", "summary": "Inspect a python remote", "description": "Retrieve the details of a single Python Remote", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PythonRemote"}}}, "tags": ["remotes"]}, "put": {"operationId": "remotes_python_python_update", "summary": "Update a python remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PythonRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "patch": {"operationId": "remotes_python_python_partial_update", "summary": "Partially update a python remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PythonRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "delete": {"operationId": "remotes_python_python_delete", "summary": "Delete a python remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "parameters": [{"name": "python_remote_href", "in": "path", "description": "URI of Python Remote. e.g.: /pulp/api/v3/remotes/python/python/1/", "required": true, "type": "string"}]}, "{python_remote_href}sync/": {"post": {"operationId": "remotes_python_python_sync", "description": "Trigger an asynchronous task to sync python content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "parameters": [{"name": "python_remote_href", "in": "path", "description": "URI of Python Remote. e.g.: /pulp/api/v3/remotes/python/python/1/", "required": true, "type": "string"}]}}, "definitions": {"Classifier": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "description": "A string giving a single classification value for a Python package.", "type": "string", "minLength": 1}}}, "PythonPackageContent": {"required": ["_artifact", "_relative_path", "filename", "packagetype", "name", "version", "metadata_version"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_relative_path": {"title": " relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "filename": {"title": "Filename", "description": "The name of the distribution package, usually of the format: {distribution}-{version}(-{build tag})?-{python tag}-{abi tag}-{platform tag}.{packagetype}", "type": "string", "minLength": 1}, "packagetype": {"title": "Packagetype", "description": "The type of the distribution package (e.g. sdist, bdist_wheel, bdist_egg, etc)", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "The name of the python project.", "type": "string", "minLength": 1}, "version": {"title": "Version", "description": "The packages version number.", "type": "string", "minLength": 1}, "metadata_version": {"title": "Metadata version", "description": "Version of the file format", "type": "string", "minLength": 1}, "summary": {"title": "Summary", "description": "A one-line summary of what the package does.", "type": "string"}, "description": {"title": "Description", "description": "A longer description of the package that can run to several paragraphs.", "type": "string"}, "keywords": {"title": "Keywords", "description": "Additional keywords to be used to assist searching for the package in a larger catalog.", "type": "string"}, "home_page": {"title": "Home page", "description": "The URL for the package's home page.", "type": "string"}, "download_url": {"title": "Download url", "description": "Legacy field denoting the URL from which this package can be downloaded.", "type": "string"}, "author": {"title": "Author", "description": "Text containing the author's name. Contact information can also be added, separated with newlines.", "type": "string"}, "author_email": {"title": "Author email", "description": "The author's e-mail address. ", "type": "string"}, "maintainer": {"title": "Maintainer", "description": "The maintainer's name at a minimum; additional contact information may be provided.", "type": "string"}, "maintainer_email": {"title": "Maintainer email", "description": "The maintainer's e-mail address.", "type": "string"}, "license": {"title": "License", "description": "Text indicating the license covering the distribution", "type": "string"}, "requires_python": {"title": "Requires python", "description": "The Python version(s) that the distribution is guaranteed to be compatible with.", "type": "string"}, "project_url": {"title": "Project url", "description": "A browsable URL for the project and a label for it, separated by a comma.", "type": "string"}, "platform": {"title": "Platform", "description": "A comma-separated list of platform specifications, summarizing the operating systems supported by the package.", "type": "string"}, "supported_platform": {"title": "Supported platform", "description": "Field to specify the OS and CPU for which the binary package was compiled. ", "type": "string"}, "requires_dist": {"title": "Requires dist", "description": "A JSON list containing names of some other distutils project required by this distribution.", "type": "string", "default": "[]", "minLength": 1}, "provides_dist": {"title": "Provides dist", "description": "A JSON list containing names of a Distutils project which is contained within this distribution.", "type": "string", "default": "[]", "minLength": 1}, "obsoletes_dist": {"title": "Obsoletes dist", "description": "A JSON list containing names of a distutils project's distribution which this distribution renders obsolete, meaning that the two projects should not be installed at the same time.", "type": "string", "default": "[]", "minLength": 1}, "requires_external": {"title": "Requires external", "description": "A JSON list containing some dependency in the system that the distribution is to be used.", "type": "string", "default": "[]", "minLength": 1}, "classifiers": {"type": "array", "items": {"$ref": "#/definitions/Classifier"}}}}, "PythonPublisher": {"required": ["name"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "A unique name for this publisher.", "type": "string", "minLength": 1}, "_last_updated": {"title": " last updated", "description": "Timestamp of the most recent update of the publisher configuration.", "type": "string", "format": "date-time", "readOnly": true}, "_distributions": {"type": "array", "items": {"type": "string", "format": "uri"}, "readOnly": true, "uniqueItems": true}}}, "AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "RepositoryPublishURL": {"type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "repository_version": {"title": "Repository Version", "description": "A URI of the repository version to be published.", "type": "string", "format": "uri"}}}, "DistributionDigest": {"required": ["type", "digest"], "type": "object", "properties": {"type": {"title": "Type", "description": "A type of digest: i.e. sha256, md5", "type": "string", "minLength": 1}, "digest": {"title": "Digest", "description": "The digest of the distribution", "type": "string", "minLength": 1}}}, "ProjectSpecifier": {"description": "<a href=\"restapi/project-specifiers.html\">List of dictionaries of Python Project Specifiers</a>", "required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "description": "A python project name.", "type": "string", "minLength": 1}, "version_specifier": {"title": "Version specifier", "description": "A version specifier, accepts standard python versions syntax: >=, <=, ==, ~=, >, <, ! can be used in conjunction with other specifiers i.e. >1,<=3,!=3.0.2. Note that the specifiers treat pre-released versions as < released versions, so 3.0.0a1 < 3.0.0. Not setting the version_specifier will sync all the pre-released and released versions.", "type": "string"}, "digests": {"type": "array", "items": {"$ref": "#/definitions/DistributionDigest"}}}}, "PythonRemote": {"required": ["name", "url"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "validate": {"title": "Validate", "description": "If True, the plugin will validate imported artifacts.", "type": "boolean"}, "ssl_ca_certificate": {"title": "Ssl ca certificate", "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server.", "type": "string", "readOnly": true}, "ssl_client_certificate": {"title": "Ssl client certificate", "description": "A PEM encoded client certificate used for authentication.", "type": "string", "readOnly": true}, "ssl_client_key": {"title": "Ssl client key", "description": "A PEM encoded private key used for authentication.", "type": "string", "readOnly": true}, "ssl_validation": {"title": "Ssl validation", "description": "If True, SSL peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string"}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string"}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string"}, "_last_updated": {"title": " last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'cache_only'. 'immediate' is the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}, "includes": {"description": "<a href=\"restapi/project-specifiers.html\">List of dictionaries of Python Project Specifiers</a>", "type": "array", "items": {"$ref": "#/definitions/ProjectSpecifier"}}, "excludes": {"type": "array", "items": {"$ref": "#/definitions/ProjectSpecifier"}}, "prereleases": {"title": "Prereleases", "description": "Whether or not to include pre-release packages in the sync.", "type": "boolean"}}}, "RepositorySyncURL": {"required": ["repository"], "type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "The synchronization mode, True for \"mirror\" and False for \"additive\" mode.", "type": "boolean", "default": false}}}}, "tags": [{"name": "content", "x-displayName": "Content"}, {"name": "publishers", "x-displayName": "Publishers"}, {"name": "remotes", "x-displayName": "Remotes"}]}